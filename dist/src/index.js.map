{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["let CURRENT_EXECUTION: ComputedSignal | SignalEffect | DebouncedSignalEffect = null;\n\ntype UpdateCallback<T> = (_: T) => T;\n\nexport class Signal<T = any> {\n  private isDestoyed = false;\n  private observers = new Set<ComputedSignal | SignalEffect | DebouncedSignalEffect>();\n  private subscribers = new Set<{ callback: (_: T) => void }>();\n\n  constructor(private _value: T) {}\n\n  get value(): T {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    if (CURRENT_EXECUTION && !this.observers.has(CURRENT_EXECUTION)) {\n      this.registerObserver(CURRENT_EXECUTION);\n    }\n    return this._value;\n  }\n\n  set value(newValue: T) {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    if (JSON.stringify(newValue) === JSON.stringify(this._value)) {\n      return;\n    }\n    this._value = newValue;\n    this.trigger();\n  }\n\n  get __subscribers__(): Set<{ callback: (_: T) => void }> {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    return this.subscribers;\n  }\n\n  set __subscribers__(\n    subscribers: Set<{\n      callback: (_: T) => void;\n    }>,\n  ) {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    this.subscribers = subscribers;\n  }\n\n  get __observers__(): Set<ComputedSignal | SignalEffect | DebouncedSignalEffect> {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    return this.observers;\n  }\n\n  set __observers__(observers: Set<ComputedSignal | SignalEffect | DebouncedSignalEffect>) {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    this.observers = observers;\n  }\n\n  update(input: UpdateCallback<T> | T): void {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    if (typeof input === 'function' && typeof this._value !== 'function') {\n      this.value = (input as UpdateCallback<T>)(this._value);\n    } else {\n      this.value = input as T;\n    }\n  }\n\n  subscribe(callback: (_: T) => void): () => void {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    const object = { callback };\n    const subscribers = this.subscribers;\n    subscribers.add(object);\n\n    return () => {\n      subscribers.delete(object);\n    };\n  }\n\n  trigger(): void {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    this.subscribers.forEach(({ callback }) => callback(this._value));\n    this.observers.forEach((observer) => observer.run());\n  }\n\n  registerObserver(observer: ComputedSignal | SignalEffect | DebouncedSignalEffect): void {\n    this.observers.add(observer);\n    observer.addDependency(this);\n  }\n\n  removeObserver(observer: ComputedSignal | SignalEffect | DebouncedSignalEffect): void {\n    if (this.isDestoyed) {\n      throw new Error('Signal already destroyed!');\n    }\n    this.observers.delete(observer);\n  }\n\n  destroy({ replaceSubscriptions = false, replaceObservers = false } = {}): void {\n    if (replaceSubscriptions) {\n      this.subscribers = new Set();\n    } else {\n      this.subscribers.clear();\n    }\n    this.observers.forEach((observer) => {\n      observer.removeDependency(this);\n    });\n    if (replaceObservers) {\n      this.observers = new Set();\n    } else {\n      this.observers.clear();\n    }\n    this.isDestoyed = true;\n  }\n}\n\nexport class ComputedSignal<T = any> {\n  private isDestoyed = false;\n  private _value: T = null;\n  private observers = new Set<ComputedSignal | SignalEffect | DebouncedSignalEffect>();\n  private subscribers = new Set<{ callback: (_: T) => void }>();\n  private dependencies = new Set<Signal | ComputedSignal>();\n  private isInitialized = false;\n\n  constructor(\n    private callback: () => T,\n    private signalsFromArguments: Array<Signal | ComputedSignal> = [],\n  ) {\n    this.run();\n    this.isInitialized = true;\n  }\n\n  get value(): T {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    if (CURRENT_EXECUTION && !this.observers.has(CURRENT_EXECUTION)) {\n      this.registerObserver(CURRENT_EXECUTION);\n    }\n    return this._value;\n  }\n\n  get __subscribers__(): Set<{ callback: (_: T) => void }> {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    return this.subscribers;\n  }\n\n  set __subscribers__(subscribers: Set<{ callback: (_: T) => void }>) {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.subscribers = subscribers;\n  }\n\n  get __observers__(): Set<ComputedSignal | SignalEffect | DebouncedSignalEffect> {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    return this.observers;\n  }\n\n  set __observers__(observers: Set<ComputedSignal | SignalEffect | DebouncedSignalEffect>) {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.observers = observers;\n  }\n\n  get __dependencies__(): Array<Signal | ComputedSignal> {\n    return Array.from(this.dependencies);\n  }\n\n  registerDependencies(dependencies: Array<Signal | ComputedSignal>): void {\n    dependencies.forEach((dependency) => {\n      dependency.registerObserver(this);\n    });\n  }\n\n  run(): void {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    CURRENT_EXECUTION = this;\n    if (!this.isInitialized) {\n      this.signalsFromArguments.forEach((signal) => signal.value);\n    }\n    const newValue = this.callback();\n    CURRENT_EXECUTION = null;\n\n    if (JSON.stringify(newValue) === JSON.stringify(this._value)) {\n      return;\n    }\n\n    this._value = newValue;\n    this.trigger();\n  }\n\n  trigger(): void {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.subscribers.forEach(({ callback }) => callback(this._value));\n    this.observers.forEach((observer) => observer.run());\n  }\n\n  addDependency(dependency: Signal | ComputedSignal): void {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.dependencies.add(dependency);\n  }\n\n  removeDependency(dependency: Signal | ComputedSignal) {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.dependencies.delete(dependency);\n  }\n\n  subscribe(callback: (_: T) => void): () => void {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    const object = { callback };\n    const subscribers = this.subscribers;\n    subscribers.add(object);\n\n    return () => {\n      subscribers.delete(object);\n    };\n  }\n\n  registerObserver(observer: ComputedSignal | SignalEffect | DebouncedSignalEffect): void {\n    this.observers.add(observer);\n    observer.addDependency(this);\n  }\n\n  removeObserver(observer: ComputedSignal | SignalEffect | DebouncedSignalEffect): void {\n    if (this.isDestoyed) {\n      throw new Error('Computed already destroyed!');\n    }\n    this.observers.delete(observer);\n  }\n\n  destroy({ replaceSubscriptions = false, replaceObservers = false } = {}): void {\n    if (replaceSubscriptions) {\n      this.subscribers = new Set();\n    } else {\n      this.subscribers.clear();\n    }\n    this.observers.forEach((observer) => {\n      observer.removeDependency(this);\n    });\n    if (replaceObservers) {\n      this.observers = new Set();\n    } else {\n      this.observers.clear();\n    }\n    try {\n      this.dependencies.forEach((dependency) => dependency.removeObserver(this));\n    } catch {\n    } finally {\n      this.dependencies.clear();\n      this.isDestoyed = true;\n    }\n  }\n}\n\nexport class SignalEffect {\n  private isDestoyed = false;\n  private dependencies = new Set<Signal | ComputedSignal>();\n  private isInitialized = false;\n\n  constructor(\n    private callback: () => void | Promise<void>,\n    private signalsFromArguments: Array<Signal | ComputedSignal> = [],\n  ) {\n    this.run();\n    this.isInitialized = true;\n  }\n\n  get __dependencies__(): Array<Signal | ComputedSignal> {\n    return Array.from(this.dependencies);\n  }\n\n  registerDependencies(dependencies: Array<Signal | ComputedSignal>): void {\n    dependencies.forEach((dependency) => {\n      dependency.registerObserver(this);\n    });\n  }\n\n  run() {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    CURRENT_EXECUTION = this;\n    if (!this.isInitialized) {\n      this.signalsFromArguments.forEach((signal) => signal.value);\n    }\n    this.callback();\n    CURRENT_EXECUTION = null;\n  }\n\n  addDependency(dependency: Signal | ComputedSignal): void {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    this.dependencies.add(dependency);\n  }\n\n  removeDependency(dependency: Signal | ComputedSignal): void {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    this.dependencies.delete(dependency);\n  }\n\n  destroy(): void {\n    try {\n      this.dependencies.forEach((dependency) => dependency.removeObserver(this));\n    } catch {\n    } finally {\n      this.dependencies.clear();\n      this.isDestoyed = true;\n    }\n  }\n}\n\nexport class DebouncedSignalEffect {\n  private isDestoyed = false;\n  private dependencies = new Set<Signal | ComputedSignal>();\n  private timerId: NodeJS.Timeout;\n  private isInitialized = false;\n  private debounceTime = 0;\n\n  constructor(\n    private callback: () => void | Promise<void>,\n    private signalsFromArguments: Array<Signal | ComputedSignal> = [],\n    options: { isInitialized?: boolean; debounceTime?: number } = {},\n  ) {\n    this.isInitialized = options.isInitialized ?? this.isInitialized;\n    this.debounceTime = options.debounceTime ?? this.debounceTime;\n    this.run();\n    this.isInitialized = true;\n  }\n\n  get __dependencies__(): Array<Signal | ComputedSignal> {\n    return Array.from(this.dependencies);\n  }\n\n  registerDependencies(dependencies: Array<Signal | ComputedSignal>): void {\n    dependencies.forEach((dependency) => {\n      dependency.registerObserver(this);\n    });\n  }\n\n  run(): void {\n    if (this.isInitialized) {\n      return this.runDebounce();\n    }\n    this.runCallback();\n  }\n\n  addDependency(dependency: Signal | ComputedSignal): void {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    this.dependencies.add(dependency);\n  }\n\n  removeDependency(dependency: Signal | ComputedSignal): void {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    this.dependencies.delete(dependency);\n  }\n\n  destroy(): void {\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    try {\n      this.dependencies.forEach((dependency) => dependency.removeObserver(this));\n    } catch {\n    } finally {\n      this.dependencies.clear();\n      this.isDestoyed = true;\n    }\n  }\n\n  private runDebounce(): void {\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n    }\n    this.timerId = setTimeout(() => {\n      this.runCallback();\n      this.timerId = null;\n    }, this.debounceTime);\n  }\n\n  private runCallback(): void {\n    if (this.isDestoyed) {\n      throw new Error('Effect already destroyed!');\n    }\n    CURRENT_EXECUTION = this;\n    if (!this.isInitialized) {\n      this.signalsFromArguments.forEach((signal) => signal.value);\n    }\n    this.callback();\n    CURRENT_EXECUTION = null;\n  }\n}\n"]}